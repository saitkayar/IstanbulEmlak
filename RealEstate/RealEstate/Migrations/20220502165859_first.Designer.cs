// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RealEstate.Data;

#nullable disable

namespace RealEstate.Migrations
{
    [DbContext(typeof(EstateDbContext))]
    [Migration("20220502165859_first")]
    partial class first
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("RealEstate.Models.District", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("Id");

                    b.ToTable("Districts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LocationName = "Üsküdar"
                        },
                        new
                        {
                            Id = 2,
                            LocationName = "Ümraniye"
                        },
                        new
                        {
                            Id = 3,
                            LocationName = "Kadıköy"
                        },
                        new
                        {
                            Id = 4,
                            LocationName = "Maltepe"
                        },
                        new
                        {
                            Id = 5,
                            LocationName = "Bağcılar"
                        });
                });

            modelBuilder.Entity("RealEstate.Models.House", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("DistrictId")
                        .HasColumnType("int");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("RoomNumber")
                        .HasColumnType("int");

                    b.Property<int>("Square")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DistrictId");

                    b.HasIndex("StatusId");

                    b.ToTable("Houses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LocationId = 1,
                            Price = 9000,
                            RoomNumber = 3,
                            Square = 100,
                            StatusId = 1,
                            Title = "Güzel Ev"
                        },
                        new
                        {
                            Id = 2,
                            LocationId = 2,
                            Price = 1150000,
                            RoomNumber = 5,
                            Square = 120,
                            StatusId = 2,
                            Title = "Ucuz Ev"
                        });
                });

            modelBuilder.Entity("RealEstate.Models.Role", b =>
                {
                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("RoleID");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleID = 1,
                            RoleName = "PasifKullanıcı"
                        },
                        new
                        {
                            RoleID = 2,
                            RoleName = "AktifKullanıcı"
                        },
                        new
                        {
                            RoleID = 3,
                            RoleName = "Admin"
                        },
                        new
                        {
                            RoleID = 4,
                            RoleName = "Supervisor"
                        });
                });

            modelBuilder.Entity("RealEstate.Models.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Statu")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.ToTable("Statuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Statu = "Kiralık"
                        },
                        new
                        {
                            Id = 2,
                            Statu = "Satılık"
                        });
                });

            modelBuilder.Entity("RealEstate.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("UserID");

                    b.HasIndex("RoleID");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserID = 1,
                            Email = "admin@test.com",
                            Password = "test123",
                            RoleID = 3,
                            UserName = "Admin"
                        },
                        new
                        {
                            UserID = 2,
                            Email = "aktif@test.com",
                            Password = "test123",
                            RoleID = 2,
                            UserName = "aktif"
                        },
                        new
                        {
                            UserID = 3,
                            Email = "pasif@test.com",
                            Password = "test123",
                            RoleID = 1,
                            UserName = "pasif"
                        });
                });

            modelBuilder.Entity("RealEstate.Models.House", b =>
                {
                    b.HasOne("RealEstate.Models.District", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId");

                    b.HasOne("RealEstate.Models.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("District");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("RealEstate.Models.User", b =>
                {
                    b.HasOne("RealEstate.Models.Role", "Rolee")
                        .WithMany()
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rolee");
                });
#pragma warning restore 612, 618
        }
    }
}
